{"version":3,"file":"static/js/690.ef553db6.chunk.js","mappings":"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","sources":["Service/API.js","components/Button/Button.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","hooks/useFetchMovieDitails.jsx"],"sourcesContent":["import axios from 'axios';\n\n//=======================\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c50f16584540f084a15313cb9781232d',\n    language: 'en-US',\n  }\n});\n\n //=========================Запит списку фільмів HOME=========================\n\nexport async function fetchPopularMovies(){\n    const {data} = await instance.get('/trending/all/week');\n    const popular = data.results;\n    return popular;\n}\n\n //=========================Запит списку фільмів MOVIE=========================\n\nexport const fetchMoviesName = async(query) => {\n   const API_KEY = 'c50f16584540f084a15313cb9781232d';\n   const {data} = await axios.get('https://api.themoviedb.org/3/search/movie',{\n           params: {\n            api_key: API_KEY,\n            include_adult: 'false',\n            language: 'en-US', \n            page: '1', \n            query: query,\n           },\n         });\n\n  const movie = data.results;\n  return movie;\n}\n\n //=========================Запит повної інфо фільма =========================\nexport async function fetchTrendingInfoMovie(movieId){\n  const {data} = await instance.get(`/movie/${movieId}`);\n  return data;\n}\n //=========================Запит акторського складу =========================\n \nexport async function fetchInfoCast(movieId){\n    const {data} = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n}\n //=========================запит оглядів для сторінки кінофільму =========================\n export async function fetchInfoReviews(movieId){\n    const {data} = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n}\n //=========================запит оглядів для сторінки кінофільму =========================\n","\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst StyledDetailsLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  justify-content: center;\n  padding: 15px 30px;\n  width: 200px;\n  margin: 16px;\n  color: white;\n  background-color: #40e6e1;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: none;\n  border-radius: 6px;\n\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const Button = ({ to, children }) => {\n  return (\n    <StyledDetailsLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledDetailsLink>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MainDetails = styled.main`\n  max-width: 1400px;\n  padding: 50px 100px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  gap: 50px;\n  flex-direction: column;\n  background-color: black;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n`;\nexport const IMG = styled.img`\n  height: auto;\n  width: 400px;\n  border-radius: 6px;\n  box-shadow: 0px 7px 7px #40e6e1, 0px 7px 7px #40e6e1, 0px 3px 9px #40e6e1;\n  // box-shadow: 0px 5px 4px rgba(46, 47, 66, 0.08),\n  // 0px 4px 4px rgba(46, 47, 66, 0.16),\n  // 0px 4px 10px rgba(46, 47, 66, 0.08),\n  // 0px 4px 10px rgba(46, 47, 66, 0.08);\n`;\n\nexport const ContainerInfo = styled.div`\n  // display: flex;\n  // gap: 50px;\n`;\nexport const TitleDetail = styled.h1`\n  color: white;\n  font-size: 52px;\n  font-weight: 700;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\nexport const UserScore = styled.p`\n  color: white;\n  font-size: 25px;\n  font-weight: 500;\n`;\nexport const Span = styled.span`\n  color: white;\n  font-size: 30px;\n  font-weight: 500;\n`;\nexport const TitleOverview = styled.h2`\n  color: white;\n  padding-top: 40px;\n  font-size: 30px;\n  font-weight: 600;\n`;\nexport const POverview = styled.p`\n  color: white;\n  width: 677px;\n  font-size: 24px;\n  font-weight: 400;\n`;\nexport const TitleGenres = styled.h3`\n  color: white;\n  font-size: 24px;\n  font-weight: 600;\n  padding-top: 40px;\n  padding-bottom: 20px;\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\nexport const GenresP = styled.p`\n  color: white;\n  font-size: 20px;\n  font-weight: 500;\n`;\n//============================================================\nexport const LinkList = styled.ul`\n  height: 70px;\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: center;\n`;\nexport const CastItem = styled.li``;\nexport const CastLink = styled(Link)`\n  font-size: 30px;\n  color: white;\n  font-weight: 700;\n`;\nexport const ReviewsItem = styled.li``;\nexport const ReviewsLink = styled(Link)`\n  font-size: 30px;\n  color: white;\n  font-weight: 700;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { Outlet } from 'react-router-dom';\nimport { Button } from '../Button/Button';\nimport {\n  MainDetails,\n  Container,\n  IMG,\n  ContainerInfo,\n  TitleDetail,\n  UserScore,\n  Span,\n  TitleOverview,\n  POverview,\n  TitleGenres,\n  GenresList,\n  GenresP,\n  LinkList,\n  CastItem,\n  CastLink,\n  ReviewsItem,\n  ReviewsLink,\n} from '../MovieDetails/MovieDetails.styled';\n\nimport { useFetchDetails } from 'hooks/useFetchMovieDitails';\nimport { Loader } from '../Loader/Loader';\nimport { toast } from 'react-toastify';\nimport { routes } from 'routes';\n//=============================================\n\nconst MovieDetails =() => {\n  const { details, isLoading, error } = useFetchDetails();\n\n  const location = useLocation();\n  const buttonHref = location.state?.from ?? routes.Movies;\n  return (\n    <MainDetails>\n      {isLoading && <Loader />}\n      {error && <p>Sorry. There are no images ... 😭</p>}\n      {error &&\n        toast.error('Sorry. There are no muvies ... 😭', {\n          position: 'top-center',\n          theme: 'light',\n        })}\n      <Button to={buttonHref}>Back to List</Button>\n      <div>\n        {details.map(\n          ({\n            original_title,\n            poster_path,\n            release_date,\n            popularity,\n            genres,\n            overview,\n          }) => (\n            <Container>\n              <IMG\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={original_title}\n              />\n              <ContainerInfo>\n                <TitleDetail>\n                  {original_title} ({release_date})\n                </TitleDetail>\n                <UserScore>\n                  User Score:<Span> {popularity}</Span>\n                </UserScore>\n                <TitleOverview>Overview</TitleOverview>\n                <POverview>{overview}</POverview>\n                <TitleGenres>Genres</TitleGenres>\n                <GenresList>\n                  {genres.map(({ name }) => {\n                    return <GenresP>{name}</GenresP>;\n                  })}\n                </GenresList>\n              </ContainerInfo>\n            </Container>\n          )\n        )}\n      </div>\n\n      <LinkList>\n        <CastItem>\n          <CastLink to=\"cast\" state={{ from: location }}>Cast</CastLink>\n        </CastItem>\n        <ReviewsItem>\n          <ReviewsLink to=\"reviews\" state={{ from: location }}>Reviews</ReviewsLink>\n        </ReviewsItem>\n      </LinkList>\n      <Outlet />\n    </MainDetails>\n  );\n}\nexport default MovieDetails;\n//=============================================\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchTrendingInfoMovie } from '../Service/API';\n\nexport const useFetchDetails = () => {\n  const [details, setDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setIsLoading(true);\n        const response = await fetchTrendingInfoMovie(movieId);\n        console.log(response);\n        setDetails([response]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetails();\n  }, [movieId]);\n\n  return { details, isLoading, error };\n};\n"],"names":["instance","axios","baseURL","params","api_key","language","fetchPopularMovies","get","data","popular","results","fetchMoviesName","query","include_adult","page","movie","fetchTrendingInfoMovie","movieId","fetchInfoCast","fetchInfoReviews","StyledDetailsLink","styled","Link","Button","to","children","size","MainDetails","Container","IMG","ContainerInfo","TitleDetail","UserScore","Span","TitleOverview","POverview","TitleGenres","GenresList","GenresP","LinkList","CastItem","CastLink","ReviewsItem","ReviewsLink","useState","details","setDetails","isLoading","setIsLoading","error","setError","useParams","console","log","useEffect","response","message","getDetails","useFetchDetails","location","useLocation","buttonHref","state","from","routes","Loader","toast","position","theme","map","original_title","poster_path","release_date","popularity","genres","overview","src","alt","name"],"sourceRoot":""}