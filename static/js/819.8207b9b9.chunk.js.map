{"version":3,"file":"static/js/819.8207b9b9.chunk.js","mappings":"4TAGMA,EAAWC,IAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAMP,SAAeC,IAAtB,+B,aAAO,O,oBAAA,wGACkBN,EAASO,IAAI,sBAD/B,uBACIC,EADJ,EACIA,KACDC,EAAUD,EAAKE,QAFlB,kBAGID,GAHJ,kEAQA,IAAME,EAAe,mCAAG,WAAMC,GAAN,iFACZ,mCADY,SAEPX,IAAAA,IAAU,4CAA4C,CACnEE,OAAQ,CACPC,QAHO,mCAIPS,cAAe,QACfR,SAAU,QACVS,KAAM,IACNF,MAAOA,KARY,uBAErBJ,EAFqB,EAErBA,KAUFO,EAAQP,EAAKE,QAZU,kBAatBK,GAbsB,2CAAH,sDAiBrB,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAsCC,GAAtC,yFACgBjB,EAASO,IAAT,iBAAuBU,IADvC,uBACET,EADF,EACEA,KADF,kBAEEA,GAFF,kEAMA,SAAeU,EAAtB,kC,aAAO,O,oBAAA,WAA6BD,GAA7B,yFACkBjB,EAASO,IAAT,iBAAuBU,EAAvB,aADlB,uBACIT,EADJ,EACIA,KADJ,kBAEIA,GAFJ,kEAKC,SAAeW,EAAtB,kC,aAAO,O,oBAAA,WAAgCF,GAAhC,yFACiBjB,EAASO,IAAT,iBAAuBU,EAAvB,aADjB,uBACGT,EADH,EACGA,KADH,kBAEGA,GAFH,kE,mGC/CKY,EAAcC,EAAAA,EAAAA,GAAH,mFAKXC,EAAcD,EAAAA,EAAAA,GAAH,sBACXE,EAAeF,EAAAA,EAAAA,GAAH,sFAKZG,EAAWH,EAAAA,EAAAA,GAAH,6D,4GCmBrB,EAtBe,WACb,MCP6B,WAC7B,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,QAiBR,OAhBAgB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfL,GAAa,GAFE,UAIQV,EAAAA,EAAAA,IAAiBF,GAJzB,OAITkB,EAJS,OAKfR,GAAW,OAAIQ,EAASzB,UALT,gDAOfqB,EAAS,KAAMK,SAPA,yBASfP,GAAa,GATE,4EAAH,qDAYhBK,GACD,GAAE,CAACjB,IAEG,CAAES,QAAAA,EAASE,UAAAA,EAAWE,MAAAA,EAC9B,CDhBuCO,GAA9BX,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,UAAWE,EAA5B,EAA4BA,MAC5B,OACE,UAACV,EAAD,WACGQ,IAAa,SAACU,EAAA,EAAD,IACbR,IAAS,uBAAG,gDACZA,GACCS,EAAAA,GAAAA,MAAY,8CAAqC,CAC/CC,SAAU,aACVC,MAAO,UAEVf,EAAQgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACvB,EAAD,YACE,UAACC,EAAD,WAAc,WAASqB,MACvB,SAACpB,EAAD,UAAWqB,MAFKF,EAKrB,MAGN,C","sources":["Service/API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useFetchReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n//=======================\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c50f16584540f084a15313cb9781232d',\n    language: 'en-US',\n  }\n});\n\n //=========================Запит списку фільмів HOME=========================\n\nexport async function fetchPopularMovies(){\n    const {data} = await instance.get('/trending/all/week');\n    const popular = data.results;\n    return popular;\n}\n\n //=========================Запит списку фільмів MOVIE=========================\n\nexport const fetchMoviesName = async(query) => {\n   const API_KEY = 'c50f16584540f084a15313cb9781232d';\n   const {data} = await axios.get('https://api.themoviedb.org/3/search/movie',{\n           params: {\n            api_key: API_KEY,\n            include_adult: 'false',\n            language: 'en-US', \n            page: '1', \n            query: query,\n           },\n         });\n\n  const movie = data.results;\n  return movie;\n}\n\n //=========================Запит повної інфо фільма =========================\nexport async function fetchTrendingInfoMovie(movieId){\n  const {data} = await instance.get(`/movie/${movieId}`);\n  return data;\n}\n //=========================Запит акторського складу =========================\n \nexport async function fetchInfoCast(movieId){\n    const {data} = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n}\n //=========================запит оглядів для сторінки кінофільму =========================\n export async function fetchInfoReviews(movieId){\n    const {data} = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n}\n //=========================запит оглядів для сторінки кінофільму =========================\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\nexport const ReviewsItem = styled.li``;\nexport const ReviewsTitle = styled.h4`\n  color: white;\n  font-size: 18px;\n  padding-bottom: 10px;\n`;\nexport const ReviewsP = styled.h4`\n  color: white;\n  font-size: 14px;\n`;\n","import {\n  ReviewsList,\n  ReviewsItem,\n  ReviewsTitle,\n  ReviewsP,\n} from '../Reviews/Reviews.styled';\nimport { useFetchReviews } from 'hooks/useFetchReviews';\nimport { Loader } from '../Loader/Loader';\nimport { toast } from 'react-toastify';\n//=============================================\nconst Reviews =() => {\n  const { reviews, isLoading, error } = useFetchReviews();\n  return (\n    <ReviewsList>\n      {isLoading && <Loader />}\n      {error && <p>Sorry. There are no images ... 😭</p>}\n      {error &&\n        toast.error('Sorry. There are no muvies ... 😭', {\n          position: 'top-center',\n          theme: 'light',\n        })}\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <ReviewsItem key={id}>\n            <ReviewsTitle>Author: {author}</ReviewsTitle>\n            <ReviewsP>{content}</ReviewsP>\n          </ReviewsItem>\n        );\n      })}\n    </ReviewsList>\n  );\n}\nexport default Reviews;\n//=============================================\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchInfoReviews } from '../Service/API';\n\nexport const useFetchReviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        setIsLoading(true);\n\n        const response = await fetchInfoReviews(movieId);\n        setReviews([...response.results]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  return { reviews, isLoading, error };\n};\n"],"names":["instance","axios","baseURL","params","api_key","language","fetchPopularMovies","get","data","popular","results","fetchMoviesName","query","include_adult","page","movie","fetchTrendingInfoMovie","movieId","fetchInfoCast","fetchInfoReviews","ReviewsList","styled","ReviewsItem","ReviewsTitle","ReviewsP","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useParams","useEffect","getDetails","response","message","useFetchReviews","Loader","toast","position","theme","map","id","author","content"],"sourceRoot":""}