{"version":3,"file":"static/js/960.d6a74140.chunk.js","mappings":"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","sources":["Page/Button/BackLink.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","Page/Movies/Movies.jsx","hooks/useFetchMoviesbyName.jsx","Service/API.js","components/Loader/Loader.jsx","routes.js"],"sourcesContent":["\n\nimport { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\nimport styled from \"@emotion/styled\";\nconst StyledLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\ngap: 4px;\njustify-content: center;\n  padding: 15px 30px;\n  width: 200px;\n  margin: 16px;\n  color: white;\n  background-color: #40e6e1;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: none;\n  border-radius: 6px;\n  margin-left: -950px;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\n\n\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  background-color: black;\n  height: 70px;\n\n`;\n\nexport const SearchFormStyled = styled.form`\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  margin-bottom: 20px;\n  margin-top: -8px;\n`;\n\nexport const InputSearch = styled.input`\n  width: 100%;\n  height: 50px;\n  border-style: none;\n  border-bottom: 1px solid white;\n  background-color: transparent;\n  outline: none;\n  margin-top: 5px;\n  font-size: 15px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n  &::placeholder {\n    font-weight: 200;\n    color: white;\n  }\n  &::textarea {\n    color: white;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  width: 50px;\n  height: 50px;\n  background-color: transparent;\n  font-size: 20px;\n  margin-top: 5px;\n  font-weight: bold;\n  color: black;\n  border: none;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { FiSearch } from 'react-icons/fi';\n\nimport {\n  Header,\n  FormBtn,\n  InputSearch,\n  SearchFormStyled,\n} from '../Searchbar/Searchbar.styled';\n//=====================================================\n\nexport function Searchbar({ onSubmit }) {\n  const [searchName, setSearchName] = useState('');\n\n  const handleChange = evt => {\n    setSearchName(evt.target.value);\n  };\n\n  //---- –û–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏ -----\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchName.trim() === '') {\n      toast('ü¶Ñ Type a name of picture.', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n      });\n      return;\n    }\n    //–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó  Submit\n    onSubmit(searchName);\n    // –û—á–∏—à–µ–Ω–Ω—è\n    setSearchName('');\n  };\n  return (\n    <Header>\n      <SearchFormStyled onSubmit={handleSubmit}>\n        <InputSearch\n          type=\"text\"\n          name=\"username\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchName}\n          onChange={handleChange}\n        />\n        <FormBtn type=\"submit\">\n          <FiSearch fontSize=\"1.5em\" color=\"white\" />\n        </FormBtn>\n      </SearchFormStyled>\n    </Header>\n  );\n}\n//=====================================================\n// export function Searchbar({ onSubmit }) {\n//   const [searchName, setSearchName] = useState('');\n\n//   const handleSearch = evt => {\n//     setSearchName(evt.currentTarget.value.toLowerCase());\n//   };\n//   //---- –û–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏ -----\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n//     if (searchName.trim() === '') {\n//       toast('ü¶Ñ Type a name of picture.', {\n//         position: 'top-right',\n//         autoClose: 5000,\n//         hideProgressBar: false,\n//         closeOnClick: true,\n//         pauseOnHover: true,\n//         draggable: true,\n//         progress: undefined,\n//         theme: 'light',\n//       });\n\n//       // alert('send name');\n//       return;\n//     }\n//     //–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó  Submit\n//     onSubmit(searchName);\n//     // –û—á–∏—à–µ–Ω–Ω—è\n//     setSearchName('');\n//     // console.log(this.state)\n//   };\n//   return (\n//     <Header>\n//       <SearchFormStyled onSubmit={handleSubmit}>\n//         <InputSearch\n//           type=\"text\"\n//           name=\"username\"\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Search images and photos\"\n//           value={searchName}\n//           onChange={handleSearch}\n//         />\n//         <FormBtn type=\"submit\">\n//           <FiSearch fontSize=\"1.5em\" color=\"white\" />\n//         </FormBtn>\n//       </SearchFormStyled>\n//     </Header>\n//   );\n// }\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nexport const MovieMain = styled.main`\n  background-color: black;\n  // max-width: 1400px;\n  padding: 50px 50px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n`;\n\nexport const MovieListContainer = styled.ul`\n  display: flex;\n  gap: 25px;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\nexport const ContainerItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 450px;\n  width: 287px;\n  background-color: black;\n  border-radius: 0px;\n  box-shadow: 0px 5px 4px rgba(46, 47, 66, 0.08),\n    0px 4px 4px rgba(46, 47, 66, 0.16), 0px 4px 10px rgba(46, 47, 66, 0.08),\n    0px 4px 10px rgba(46, 47, 66, 0.08);\n  &:hover,\n  &:focus {\n    border-radius: 6px;\n    box-shadow: 0px 5px 3px #40e6e1, 0px 3px 3px #40e6e1, 0px 3px 9px #40e6e1;\n  }\n`;\nexport const IMG = styled.img`\n  height: 380px;\n  width: 287px;\n  border-radius: 10px;\n  box-shadow: 0px 5px 4px rgba(46, 47, 66, 0.08),\n    0px 4px 4px rgba(46, 47, 66, 0.16), 0px 4px 10px rgba(46, 47, 66, 0.08),\n    0px 4px 10px rgba(46, 47, 66, 0.08);\n`;\n\nexport const MovieName = styled(NavLink)`\n\n`;\nexport const MovieP = styled.p`\n  color: white;\n  font-size: 18px;\n  font-weight: 500;\n  padding-top: 10px;\n  padding-bottom: 5px;\n  &.active {\n    color: orange;\n  }\n  &:hover {\n    color: antiquewhite;\n    font-size: 20px;\n    font-weight: 500;\n  }\n`;\n\n","import { useLocation } from \"react-router-dom\";\n\nimport {\n  MovieMain,\n  MovieListContainer,\n  ContainerItem,\n  MovieName,\n  IMG,\n  MovieP,\n} from '../MovieList/MovieList.styled';\n\n\n\nexport const MovieList = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <MovieMain>\n      <MovieListContainer>\n        {movie.map(({ id, title, poster_path }) => (\n          <ContainerItem key={id}>\n            <MovieName to={`${id}`} state={{from:location}}>\n              <IMG\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n              />\n              <MovieP>{title}</MovieP>\n            </MovieName>\n          </ContainerItem>\n        ))}\n      </MovieListContainer>\n    </MovieMain>\n  );\n};\n\n","import { useLocation } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { BackLink } from '../../Page/Button/BackLink';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { MovieMain } from '../../components/MovieList/MovieList.styled';\nimport { routes } from 'routes';\nimport { useFetchMovies } from 'hooks/useFetchMoviesbyName';\n\n//================================================================================================\nexport function Movies() {\n  const location = useLocation();\n  const { movie, isLoading, error, handleChange } = useFetchMovies();\n\n  const goBackLink = location?.state?.from ?? routes.HOME;\n\n  return (\n    <MovieMain>\n      {isLoading && <Loader />}\n      {/* {error && <p style={{color: 'white'}}>Sorry. There are no muvies ... üò≠</p>} */}\n      {error &&\n        toast.error('Sorry. There are no muvies ... üò≠', {\n          position: 'top-center',\n          theme: 'light',\n        })}\n      <BackLink to={goBackLink}>Back to Home</BackLink>\n      <Searchbar onSubmit={handleChange} />\n      {movie && <MovieList movie={movie} />}\n\n      <ToastContainer autoClose={3000} />\n    </MovieMain>\n  );\n}\n// //=====================================================================\n//   const [query, setQuery] = useState('batman');\n\n//   const [movie, setMovie] = useState([]);\n//   const [isEmpty, setIsEmpty] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   //===================================\n\n//   useEffect(() => {\n//     const abortCtrl = new AbortController();\n\n//     async function getImage() {\n\n//       try {\n//         setIsLoading(true);\n//         const response = await fetchMovies(query, abortCtrl);\n//         console.log(response);\n//         const { results } = response;\n//         if (!results.length) {\n//           setIsEmpty(true);\n//           return;\n//         }\n//         setMovie([...results]);\n//       } catch (error) {\n//         // setError(error.message);\n//         console.log(error.message);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//     getImage();\n//     return () => {\n//       abortCtrl.abort();\n//     };\n//   }, [query]);\n//   //------------------------------\n\n//       const location = useLocation();\n//       const backLinkHref = location.state?.from ?? \"/\";\n//   const handleFormSubmit = value => {\n//     setQuery(value);\n//     setMovie([]);\n//     setIsEmpty(false);\n//     setIsLoading(false);\n//   };\n\n//   return (\n//     <>\n//       <MovieMain>\n//       <BackLink to={backLinkHref} >Back to Home</BackLink>\n//         <Searchbar onSubmit={handleFormSubmit} />\n//         <MovieList movie={movie} />\n//       </MovieMain>\n//       <>\n//         {/* {isEmpty && <p>Sorry. There are no images ... üò≠</p>} */}\n//         {isLoading && <Spinner />}\n//         {isEmpty &&\n//           toast.error('Sorry. There are no images ... üò≠', {\n//             position: 'top-center',\n//             theme: 'light',\n//           })}\n\n//         <ToastContainer autoClose={3000} />\n//       </>\n//     </>\n//   );\n// }\n","import { fetchMoviesName } from '../Service/API';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n//===================================\n\nexport const useFetchMovies = () => {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    const movieName = searchParams.get('query');\n    if (!movieName) {\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMoviesName = await fetchMoviesName(movieName);\n\n        setMovie(fetchedMoviesName);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n  const handleChange = query => {\n    setSearchParams({ query });\n  };\n  return { movie, isLoading, error, handleChange };\n};\n","import axios from 'axios';\n\n//=======================\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c50f16584540f084a15313cb9781232d',\n    language: 'en-US',\n  }\n});\n\n //=========================–ó–∞–ø–∏—Ç —Å–ø–∏—Å–∫—É —Ñ—ñ–ª—å–º—ñ–≤ HOME=========================\n\n// export async function fetchTrendingMovies(){\n//   try{\n//     const {data} = await instance.get('/tv/popular');\n//     return data;\n//   } catch(error){\n//     throw error;\n//   }\n// }\n\nexport async function fetchPopularMovies(){\n    const {data} = await instance.get('/trending/all/week');\n    const popular = data.results;\n    return popular;\n\n}\n// axios.defaults.baseURL = 'https://restcountries.com/v3.1';\n\n// export const getCountries = async () => {\n//   const { data } = await axios.get('/region/europe');\n//   const countries = transformCountriesData(data);\n\n//   return countries;\n// };\n //=========================–ó–∞–ø–∏—Ç —Å–ø–∏—Å–∫—É —Ñ—ñ–ª—å–º—ñ–≤ MOVIE=========================\n\n\n//  export const fetchMovies = async(query, abortCtrl) => {\n//   try {\n//    const API_KEY = 'c50f16584540f084a15313cb9781232d';\n//    const responce = await axios.get('https://api.themoviedb.org/3/search/movie',{\n//            params: {\n//             api_key: API_KEY,\n//             include_adult: 'false',\n//              language: 'en-US', \n//              page: '1', \n//              query: query,\n//              signal: abortCtrl.signal,\n            \n//            },\n//          });\n      \n//  return responce.data;\n//         }catch (error) {\n//           console.log(error.message);\n//         } \n//  }\n// export const fetchCountry = async(name) => {\n\n//   const {data}  = await instance.get(`/search/movie/${name}`);\n//   const country = transformCountryData(data.results);\n//   return country;\n  \n// }\nexport const fetchMoviesName = async(query) => {\n   const API_KEY = 'c50f16584540f084a15313cb9781232d';\n   const {data} = await axios.get('https://api.themoviedb.org/3/search/movie',{\n           params: {\n            api_key: API_KEY,\n            include_adult: 'false',\n            language: 'en-US', \n            page: '1', \n            query: query,\n           },\n         });\n\n  const movie = data.results;\n  return movie;\n  \n}\n // export const fetchCountry = async name => {\n//   const { data } = await axios.get(`/name/${name}`);\n//   const country = transformCountryData(data);\n\n//   return country[0];\n// };\n//================================================================\n\n\n //=========================–ó–∞–ø–∏—Ç –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ —Ñ—ñ–ª—å–º–∞ =========================\n// export async function fetchTrendingInfoMovie(id){\n\n//     const {data} = await instance.get(`/movie/${id}`);\n//     return data;\n\n// }\nexport async function fetchTrendingInfoMovie(movieId){\n  const {data} = await instance.get(`/movie/${movieId}`);\n  return data;\n}\n //=========================–ó–∞–ø–∏—Ç –∞–∫—Ç–æ—Ä—Å—å–∫–æ–≥–æ —Å–∫–ª–∞–¥—É =========================\n \nexport async function fetchInfoCast(movieId){\n    const {data} = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n\n}\n //=========================–∑–∞–ø–∏—Ç –æ–≥–ª—è–¥—ñ–≤ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º—É =========================\n export async function fetchInfoReviews(movieId){\n\n    const {data} = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n}\n //=========================–∑–∞–ø–∏—Ç –æ–≥–ª—è–¥—ñ–≤ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º—É =========================\n","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = props => {\n  const style = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  };\n  return (\n    <div style={style}>\n      <ColorRing\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","export const routes = {\n    HOME: '/',\n    Movies: '/movies',\n    Movies_ID: '/movies/:id',\n  };"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Header","SearchFormStyled","InputSearch","FormBtn","Searchbar","onSubmit","useState","searchName","setSearchName","evt","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","type","name","autoComplete","autoFocus","placeholder","value","onChange","target","fontSize","color","MovieMain","MovieListContainer","ContainerItem","IMG","MovieName","NavLink","MovieP","MovieList","movie","location","useLocation","map","id","title","poster_path","state","from","src","alt","Movies","setMovie","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","movieName","get","fetchData","fetchMoviesName","fetchedMoviesName","message","handleChange","query","useFetchMovies","goBackLink","routes","Loader","instance","axios","baseURL","params","api_key","language","fetchPopularMovies","data","popular","results","include_adult","page","fetchTrendingInfoMovie","movieId","fetchInfoCast","fetchInfoReviews","props","style","top","left","transform","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","HOME","Movies_ID"],"sourceRoot":""}